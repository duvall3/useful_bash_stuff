#!/bin/bash
# md2html -- Convert a Markdown file to HTML. See README for more information.
# USAGE: md2html [-h] [-o <OUTFILE>] [-t <TITLE>] <FILENAME>"
# ~ Mark J. Duvall ~ duvall3.git@gmail.com ~ 06/2023 ~ #

# Copyright (C) 2023 Mark J. Duvall / T. Rocks Science
# 
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 


## INIT

# general
INFILE=$1
NULL=/dev/null
ERR=/dev/stderr
ECHO="$(which echo 2> $NULL) -e"

# check for pandoc and realpath
if ! PANDOC=$(which pandoc 2> $NULL); then $ECHO "Error: This program requires Pandoc." 2> $ERR; exit 127; fi
if ! DIRNAME=$(which dirname 2> $NULL); then $ECHO "Error: This program requires the 'dirname' command." 2> $ERR; exit 127; fi
if ! REALPATH=$(which realpath 2> $NULL); then $ECHO "Error: This program requires the 'realpath' command." 2> $ERR; exit 127; fi

# define usage
usage() {
  $ECHO "Usage: md2html [-h] [-o <OUTFILE>] [-t <TITLE>] <FILENAME>"
  $ECHO "Convert a Markdown file to HTML"
  $ECHO
  $ECHO "Options:"
  $ECHO "  -h\t\tShow this help message and exit"
  $ECHO "  -o OUTFILE\tSet output filename"
  $ECHO "  -t TITLE\tSet title of output HTML page"
  $ECHO
}

# process options
while getopts "ho:t:" OPTIONS; do
  case $OPTIONS in
    h)
      usage > $ERR
      exit 10
      ;;
    *)
      $ECHO
      usage > $ERR
      exit 11
      ;;
  esac
done
shift $((OPTIND-1)) # uncomment for options with args

# set parameters
TITLE=${TITLE:-${INFILE%.md}}
OUTFILE=${OUTFILE:-$TITLE".html"}
PANDOC_TEMPLATE_DIR=$($DIRNAME $($REALPATH ${BASH_SOURCE[0]}))
TEMPLATE=github-darkdown
TEMPLATE_FILES=( "$PANDOC_TEMPLATE_DIR/$TEMPLATE.css" "$PANDOC_TEMPLATE_DIR/$TEMPLATE.html")
HSSTYLE="$PANDOC_TEMPLATE_DIR/$TEMPLATE.theme"
CSSSTYLE="$PANDOC_TEMPLATE_DIR/$TEMPLATE-additional.css"


## MAIN
STYLEDEFS=true
for STYLEFILE in {${TEMPLATE_FILES[*]},$HSSTYLE,$CSSSTYLE}; do
  if [ ! -r $STYLEFILE ]; then
    $ECHO "$STYLEFILE failed" > $ERR
    STYLEDEFS=false
  fi
done
# $ECHO "STYLEDEFS = $STYLEDEFS" > $ERR #debug
if $STYLEDEFS; then
  $PANDOC -s --metadata pagetitle="$TITLE" --template=$TEMPLATE --highlight-style=$HSSTYLE -o $OUTFILE $CSSSTYLE $INFILE
else
  $ECHO "Style definition file(s) missing; using default HTML style." > $ERR
  $PANDOC -s --metadata pagetitle="$TITLE" -o $OUTFILE $INFILE
fi
EXIT_STATUS=$?


## EXIT

# all pau!   )
EXIT_STATUS=${EXIT_STATUS:-0}
exit $EXIT_STATUS

