"""
Startup / profile script for Python
"""

# modules
import os, sys, re, pprint, inspect
import numpy as np
# import matplotlib.pyplot as plt   #TODO: temp disable
try:
    from tabulate import tabulate as tab
    HAS_TABULATE = True
except ModuleNotFoundError:
    HAS_TABULATE = False

# aliases
pwd = os.getcwd
ls = os.listdir
cd = os.chdir
shell = os.system
pp = pprint.pprint

# constants
PI: float = 3.14159265358979323846
C0: float = 299792458.

# functions
# exist -- whether identifier exists
def exist( name: str=str() ) -> bool:
    """ Report whether variable named 'name' exists. """
    if name == str():
        print(r'Please enter a variable name.')
        return None
    return ( name in locals() or name in globals() )
# ppd -- pretty print an object's "dir()" list
def ppd( obj = None ):
    """ Pretty print an object's 'dir()' list """
    # pprint.pp( dir(obj) )
    if HAS_TABULATE:
        TABLE = [ ['Attribute', 'Type'] ]
        for dirobj in dir(obj):
            TABLE.append([dirobj.__str__(), type(obj.__getattribute__(dirobj))])
        print(tab(TABLE, headers='firstrow'))
    else:
        for dirobj in dir(obj):
            print(dirobj, type(obj.__getattribute__(dirobj)))
    return None
# ppv -- pretty print, verbose
def ppv( obj = None ):
    """ Verbose pretty-print using inspect.getmembers()"""
    pprint.pp( inspect.getmembers(obj) )
    return None
# listre -- regex-search a list
def listre( listname: list, restring: str ) -> list:
    """ Search a list for items matching a regex. """
    pat = re.compile(restring)
    matches = list( filter(pat.match, listname) )
    return matches

# all pau!   )

