#!/bin/bash
# battpow -- basic battery monitor
# -- may also refer to a home run   ;D
USAGE="Usage: battpow"

# ~ Mark J. Duvall ~ mjduvall@hawaii.edu ~ 01/2023 ~ #

#Copyright (C) 2022 Mark J. Duvall / T. Rocks Science
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# help check
if [[ $1 =~ "-h" ]]; then
  $ECHO $USAGE
  exit 10
fi

# init
UPOWER=$(which upower)
AWK=$(which awk)
GREP=$(which grep)
ECHO=$(which echo)
BC=$(which bc)
TR=$(which tr)
PRINTF=$(which printf)
COLUMN=$(which column)
BATTERY_PATH=$($UPOWER -e | $GREP battery)
# STATE=$($UPOWER -i $BATTERY_PATH | $AWK '$1 ~ /state:/ {print $2}')

# query and parse battery info
BATSTATS=$($UPOWER -i $BATTERY_PATH)
STATE=$($ECHO $BATSTATS | $GREP -o "state: [[:alpha:]]\+ing" | $AWK '{print $2}')
ENERGY_FULL=$($ECHO $BATSTATS | $GREP -o "energy-full: .*Wh" | $AWK '{print $2}')
ENERGY=$($ECHO $BATSTATS | $GREP -o "energy: .*Wh" | $AWK '{print $2}')
ENERGY_RATE=$($ECHO $BATSTATS | $GREP -o "energy-rate: .*W" | $AWK '{print $2}')
PCT=$($ECHO $BATSTATS | $GREP -o "percentage: .*%" | $AWK '{print $2}' | $TR -d '%')
# $ECHO -e "State: $STATE\nEnergy-full: $ENERGY_FULL\nEnergy: $ENERGY\nEnergy-rate: $ENERGY_RATE\nPercentage: $PCT\n" #debug

# convert W*h to kJ and print
ENERGY=$($ECHO "$ENERGY*3.6" | $BC -l)
ENERGY_FULL=$($ECHO "$ENERGY_FULL*3.6" | $BC -l)
PCT_RATE=$($ECHO "(100/1000) * $ENERGY_RATE / $ENERGY_FULL" | $BC -l)
PCT_RATE_HR=$($ECHO "3600 * $PCT_RATE" | $BC -l)
# $ECHO -e "State: $STATE\nEnergy-full: $ENERGY_FULL\nEnergy: $ENERGY\nEnergy-rate: $ENERGY_RATE\nPercentage: $PCT\nPercent_Rate: $PCT_RATE" #debug
$PRINTF "Energy : %03.1f kJ : %02d %%\nRate : %02.2f   W : %02.f %%/hr.\nEnergy_Full: %03.1f kJ\n" $ENERGY $PCT $ENERGY_RATE $PCT_RATE_HR $ENERGY_FULL | $COLUMN -ts ':'

# all pau!   )
exit 0
