#!/bin/bash
# pcpu -- get average processor usage pct
# Usage: pcpu [COLORIZE_TF] [LOOP_TF] [DELAY]
# ~ Mark J. Duvall ~ mjduvall@hawaii.edu ~ 12/2021 ~ #

#Copyright (C) 2021 Mark J. Duvall
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# help check
USAGE="Usage: pcpu [COLORIZE_TF] [LOOP_TF] [DELAY]"
if [[ $1 =~ "-h" ]]; then
  echo $USAGE
  exit 10
fi

# # include 'powrate' if available
# POWRATE=$(which powrate 2> /dev/null)

# settings
COLORIZE_TF=${1:-true}
LOOP_TF=${2:-true}
SEC=${3:-1s}

# define main function
print_cpu_usage() {
  # calculate
  SUM=$(ps -eo pcpu | grep -Ev "[[:alpha:]]" | add_list.sh)
  CORES=$(lscpu | awk '$1 ~ /CPU\(s\):/ {print $2}')
  PCT=$(echo "$SUM / $CORES" | bc -l)
  # print
  if $COLORIZE_TF; then
    printf "\033[7mCPU: %2.2f %%\033[0m\n" $PCT
  else
    printf "CPU: %02.2f %%\n" $PCT
  fi
}

# main
if $LOOP_TF; then
  while true; do
    clear
    echo; echo
    # if [ $POWRATE ]; then $POWRATE 2> /dev/null; fi
    print_cpu_usage
    sleep $SEC
  done
else
  # if [ $POWRATE ]; then $POWRATE 2> /dev/null; fi
  print_cpu_usage
fi

# all pau!   )
exit 0
