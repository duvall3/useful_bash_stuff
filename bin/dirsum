#!/bin/bash
# dirsum -- compute hashes for all files in a directory using SHA or MD5,
#   save the results, and return a single overall hash value
#   USAGE:
#     1) 'cd' into the directory you want to hash
#     2) run 'dirsum'
#     3) 'cd' into the parent directory (i.e., 'cd ..')
#     4) examine the new ".dirsum" text file
#   TO COMPARE HASHES:
#     1) repeat the above procedure
#     2) compare the last lines of the ".dirsum" and ".dirsum~" files
# -- NOTE: MUST BE RUN IN TARGET DIRECTORY
# ~ Mark J. Duvall ~ mjduvall@hawaii.edu ~ 12/2021 ~ #

#Copyright (C) 2021 Mark J. Duvall / T. Rocks Science
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# init
OUTFILENAME=$(basename $(pwd)).dirsum
if [ -w ../ ]; then
  OUTFILEDIR="$PWD/.."
else
  OUTFILEDIR="."
fi
OUTFILE=$OUTFILEDIR/$OUTFILENAME
if [ -f $OUTFILE ]; then OUTFILE="$OUTFILE"~; fi
TARGETDIR="."
SORT_LOCALE=C
if [ $(which shasum) ]; then
  HASHCMD=$(which shasum)
  # HASH_OPTIONS="-U" # Universal newlines: gives same result regardless of Unix Windows line terminators
  HASH_OPTIONS="" # for portability, ironically
elif [ $(which md5sum) ]; then
  HASHCMD=$(which md5sum)
  HASH_OPTIONS=""
else
  echo "Error in dirsum: No hash function found."
  exit 1
fi

# get and sort file list
FILE_LIST=$(find $TARGETDIR -type f | LC_ALL=$SORT_LOCALE sort)

# compute file hashes, then compute hash of result
#$HASHCMD $HASH_OPTIONS $FILE_LIST | $HASHCMD $HASH_OPTIONS #KEEPME
  $HASHCMD $HASH_OPTIONS $FILE_LIST > $OUTFILE
  echo "###" >> $OUTFILE
  $HASHCMD $HASH_OPTIONS $OUTFILE | tee -a $OUTFILE

# all pau!   )
exit 0
