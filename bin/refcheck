#!/bin/bash
# refcheck -- Scan a PDF for possible missing citations, assuming AIP-style formatting (i.e., citations appear as [1], [2], etc.)
# USAGE: refcheck [-h|-p RANGE -l LASTLINE] <FILE>...
# ~ Mark J. Duvall ~ duvall3.git@gmail.com ~ 08/2023 ~ #

# Copyright (C) 2023 Mark J. Duvall / T. Rocks Science
# 
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 


## INIT

# general
NULL=/dev/null
ERR=/dev/stderr

# control for aliases
ECHO="$(which echo) -e"
GREP="$(which grep) -E --color=auto"
AWK=$(which awk)
AWK=${AWK:-$(which gawk)}
AWK=${AWK:-$(which mawk)}
if [ ! $AWK ]; then $ECHO "The program 'awk' is required by this script." > $ERR; exit 3; fi
PDFG=$(which pdfgrep)
if [ ! $PDFG ]; then $ECHO "The program 'pdfgrep' is required by this script." > $ERR; exit 3; fi

# define usage
usage() {
  $ECHO "Usage: refcheck [-h|-p RANGE -l LASTLINE] <FILE>..."
  $ECHO "Scan a PDF for possible missing citations, assuming AIP-style formatting (i.e., citations appear as [1], [2], etc.)"
  $ECHO
  $ECHO "Options:"
  $ECHO "  -h\t\tShow this help message and exit"
  $ECHO "  -p RANGE\tSpecify a page range; e.g., '-p 2-5'"
  $ECHO "  -l LASTLINE\tIf the PDF has line numbers, specify the final line to check"
  $ECHO "  \t\t  (this makes it easy to avoid printing the bibliography)"
  $ECHO
}

# process options
declare RANGE LASTLINE
while getopts "hp:l:" OPTIONS; do
  case $OPTIONS in
    h)
      usage
      exit 10
      ;;
    p)
      RANGE=$OPTARG
      ;;
    l)
      LASTLINE=$OPTARG
      ;;
    *)
      $ECHO
      usage
      exit 11
      ;;
  esac
done
shift $((OPTIND-1)) # uncomment for options with args


## MAIN

FILELIST=$@
if [ $RANGE ]; then
  PDFG+=" --page-range=$RANGE"
  shift
fi
REGEX="\[(\?|[^[:digit:]]*)\]"
for FILE in ${FILELIST[*]}; do
  $PDFG $REGEX $FILE | $AWK -v lastline=$LASTLINE '$1<=lastline' | $GREP $REGEX
done
EXIT_STATUS=$?


## EXIT

# all pau!   )
EXIT_STATUS=${EXIT_STATUS:-0}
exit $EXIT_STATUS

